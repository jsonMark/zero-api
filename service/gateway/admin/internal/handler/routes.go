// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	v0admin "zero-api/service/gateway/admin/internal/handler/v0/admin"
	"zero-api/service/gateway/admin/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/getcaptcha",
				Handler: v0admin.GetCaptchaHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: v0admin.LoginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/admin/v0"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/logout",
				Handler: v0admin.LogoutHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/generateToken",
				Handler: v0admin.GenerateTokenHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/getQiNiuFileList",
				Handler: v0admin.GetQiNiuFileListHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/admin/v0"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/list",
				Handler: v0admin.PositiveMeditationCategoryPageListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/edit",
				Handler: v0admin.PositiveMeditationCategoryEditHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/del",
				Handler: v0admin.PositiveMeditationCategoryDelHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/admin/v0/positiveMeditationCategory"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/list",
				Handler: v0admin.PositiveMeditationTagPageListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/edit",
				Handler: v0admin.PositiveMeditationTagEditHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/del",
				Handler: v0admin.PositiveMeditationTagDelHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/admin/v0/positiveMeditationTag"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/list",
				Handler: v0admin.PositiveMeditationPageListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/edit",
				Handler: v0admin.PositiveMeditationEditHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/del",
				Handler: v0admin.PositiveMeditationDelHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/modifyData",
				Handler: v0admin.ModifyDataHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/admin/v0/positiveMeditation"),
	)
}
